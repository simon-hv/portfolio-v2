---
import NavBar from '@/components/blocks/NavBar.astro'
import { emailAddress } from '@/constants'
import { ViewTransitions } from 'astro:transitions'

interface Props {
  title: string
}

const { title } = Astro.props
---

<!doctype html>
<html class="dark font-mono leading-7" lang="en">
  <head>
    <!-- Google tag (gtag.js) -->
    <script async src="https://www.googletagmanager.com/gtag/js?id=G-RFEVWFGTDK"
    ></script>
    <script is:inline>
      window.dataLayer = window.dataLayer || []
      function gtag() {
        dataLayer.push(arguments)
      }
      gtag('js', new Date())

      gtag('config', 'G-RFEVWFGTDK')
    </script>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/jpeg" href="/favicon.jpeg" />
    <meta name="generator" content={Astro.generator} />
    <meta
      name="description"
      content="Simon HaÃ¯oun-Viet, senior frontend developer."
    />
    <title>{title}</title>
    <ViewTransitions />
  </head>
  <body>
    <div
      class="email-container after:my-O fixed bottom-0 left-2 right-auto z-50 hidden w-10 animate-appear text-sm after:mx-auto after:block after:h-20 after:w-px after:bg-slate-400 after:content-[''] xl:block"
    >
      <a
        class="email-link p-2.5 tracking-widest no-underline hover:animate-heartbeat hover:cursor-pointer hover:text-white"
        href={`mailto:${emailAddress}`}
      >
        {emailAddress}
      </a>
    </div>
    <NavBar />
    <slot />
    <style is:global>
      .email-link {
        -webkit-writing-mode: vertical-rl;
        writing-mode: vertical-rl;
      }
      ::selection {
        background-color: #fad0c9;
        color: #4f4f4e;
      }
    </style>

    <script>
      const cards = document.querySelectorAll('.card-animate')
      cards?.forEach((card, idx) => {
        card.animate(
          [
            { transform: 'translateY(20px)', opacity: 0 },
            { transform: 'translateY(-10px)', opacity: 0.8 },
            { transform: 'translateY(0)', opacity: 1 },
          ],
          {
            duration: 1000,
            easing: 'ease-in-out',
            delay: idx * 300,
            fill: 'both',
          },
        )
      })

      // we do not want to re trigger animations on page change
      document.addEventListener('astro:after-swap', () => {
        const emailContainer = document.querySelector('.email-container')
        const cardContainers = document.querySelectorAll('.card-animate')

        emailContainer?.classList?.remove('animate-appear')
        cardContainers?.forEach((card) => {
          card.classList.remove('opacity-0')
        })
      })
    </script>
  </body>
</html>
